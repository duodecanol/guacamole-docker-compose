# networks
# create a network 'guacnetwork_compose' in mode 'bridged'
networks:
  guacnetwork_compose:
    driver: bridge

# services
services:
  # guacd
  guacd:
    container_name: guacd_compose
    image: guacamole/guacd:${GUACAMOLE_VERSION:-1.5.5}
    networks:
      - guacnetwork_compose
    restart: unless-stopped
    volumes:
    - ./drive:/drive:rw
    - ./record:/record:rw
  # postgres
  postgres:
    container_name: postgres_guacamole_compose
    environment:
      PGDATA: /var/lib/postgresql/data/guacamole
      POSTGRES_DB: guacamole_db
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: guacamole_user
    image: postgres:15.2-alpine
    networks:
      - guacnetwork_compose
    restart: unless-stopped
    volumes:
    - ./init:/docker-entrypoint-initdb.d/
    - pgdata:/var/lib/postgresql/data

  # guacamole
  guacamole:
    container_name: guacamole_compose
    depends_on:
    - guacd
    - postgres
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRES_DATABASE: guacamole_db
      POSTGRES_HOSTNAME: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: guacamole_user
    image: guacamole/guacamole:${GUACAMOLE_VERSION:-1.5.5}
    networks:
      - guacnetwork_compose
    volumes:
      - ./record:/record:rw
    ports:
## enable next line if not using nginx
    - 8080:8080 # Guacamole is on :8080/guacamole, not /.
## enable next line when using nginx
    # - 8080/tcp
    restart: unless-stopped

########### optional ##############
  # nginx
  # nginx:
  #  container_name: nginx_guacamole_compose
  #  restart: always
  #  image: nginx:latest
  #  volumes:
  #  - ./nginx/templates:/etc/nginx/templates:ro
  #  - ./nginx/ssl/self.cert:/etc/nginx/ssl/self.cert:ro
  #  - ./nginx/ssl/self-ssl.key:/etc/nginx/ssl/self-ssl.key:ro
  #  ports:
  #  - 8443:443
  #  networks:
  #    - guacnetwork_compose
####################################################################################

volumes:
  pgdata: